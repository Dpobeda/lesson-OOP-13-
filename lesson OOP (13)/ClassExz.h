#pragma once
#include <vector>

// Вводная по шаблонам.
// Шаблонами могут быть:
// 1. Классы. Шаблонами можно сделать шаблоный статический метод.
// 2. Функции. Шаблонами можно сделать шаблоный статический метод.
// 3. Переопреденя типов.
// 4. Статический метод класса
// 5. Метод класса. Исключения: Конструкторы.
// Опеределения и реализация должны быть всё в одном файле не куда не переходить.

class Myclass
{
public:
	// Будет пытаться встраиваться из за определения.
	template<typename T>
	void f00();
	
	// Будет пытаться встраиваться из за места опредения.
	void f02(){ }
	
	// Потерял возможность встраиваться.
	void f03();

	static int getCount();
private:
	int a;
	int b;
	static int count; // Это автомотически глобальные переменные (static). | Не будет работать, из за недостатка инцелезации |
	static const int g_rgav { 10 }; 
	static std::vector <int> vectName;
};

extern int g;

// 0.
// service.

// Область памяти.
// programm.
// brs. Строго определем, что попадёт в них. Имеют жизнь равному жизнью программы.
// bss. Строго определем, что попадёт в них. Имеют жизнь равному жизнью программы.
// heap. Функции new, операторы delete, и др. связаное с памятью.
// stack. Область работы с функцией.
// args. 